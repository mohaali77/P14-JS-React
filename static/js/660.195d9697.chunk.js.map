{"version":3,"file":"static/js/660.195d9697.chunk.js","mappings":"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","sources":["components/table/table.jsx"],"sourcesContent":["import './style/table.css'\r\nimport { useState, useMemo, useEffect } from 'react';\r\nimport { useTable, useSortBy, usePagination, useGlobalFilter } from 'react-table'\r\n\r\nexport const Table = () => {\r\n\r\n    const [data, setData] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchData = () => {\r\n            const storedData = JSON.parse(localStorage.getItem('employee'));\r\n            setData(storedData || []);\r\n        };\r\n\r\n        fetchData();\r\n    }, []);\r\n    const COLUMNS = [\r\n        {\r\n            Header: 'First Name',\r\n            accessor: 'firstName'\r\n        }, {\r\n            Header: 'Last Name',\r\n            accessor: 'lastName'\r\n        }, {\r\n            Header: 'Date of Birth',\r\n            accessor: 'dateBirth'\r\n        }, {\r\n            Header: 'Start Date',\r\n            accessor: 'dateStart'\r\n        }, {\r\n            Header: 'Street',\r\n            accessor: 'street'\r\n        }, {\r\n            Header: 'City',\r\n            accessor: 'city'\r\n        }, {\r\n            Header: 'State',\r\n            accessor: 'state'\r\n        }, {\r\n            Header: 'Zip Code',\r\n            accessor: 'zipCode'\r\n        }, {\r\n            Header: 'Department',\r\n            accessor: 'department'\r\n        },\r\n    ]\r\n\r\n    const columns = useMemo(() => COLUMNS, [])\r\n\r\n    const { getTableProps, getTableBodyProps, headerGroups, page, nextPage, previousPage, canPreviousPage, canNextPage, pageOptions, setPageSize, state, setGlobalFilter, prepareRow } = useTable({\r\n        columns: columns,\r\n        data: data\r\n    }, useGlobalFilter, useSortBy, usePagination)\r\n\r\n    const { pageIndex, pageSize, globalFilter } = state\r\n\r\n    return <>\r\n        <div className='pageSize_search'>\r\n            <select value={pageSize} onChange={e => setPageSize(Number(e.target.value))} >{[10, 25, 50].map(pageSize => (\r\n                <option key={pageSize} value={pageSize}>\r\n                    Show {' ' + pageSize}\r\n                </option>\r\n            ))}</select>\r\n            <span>Search :{' '}\r\n                <input type=\"text\"\r\n                    value={globalFilter || ''}\r\n                    onChange={e => setGlobalFilter(e.target.value)} />\r\n            </span>\r\n        </div>\r\n        <table {...getTableProps()}>\r\n            <thead>\r\n                {headerGroups.map((headerGroups) => (\r\n                    <tr {...headerGroups.getHeaderGroupProps()}>\r\n                        {headerGroups.headers.map((columns) => (\r\n                            <th {...columns.getHeaderProps(columns.getSortByToggleProps())}>{columns.render('Header')}\r\n                                <span>{' '}{columns.isSorted ? (columns.isSortedDesc ? <i className=\"fa-solid fa-sort-up\"></i> : <i class=\"fa-solid fa-sort-down\"></i>) : ''}</span>\r\n                            </th>\r\n                        ))}\r\n                    </tr>\r\n                ))}\r\n            </thead>\r\n            <tbody {...getTableBodyProps()}>\r\n                {page.map((row) => {\r\n                    prepareRow(row)\r\n                    return (\r\n                        <tr {...row.getRowProps()}>\r\n                            {row.cells.map((cell) => {\r\n                                return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\r\n                            })}\r\n                        </tr>\r\n                    )\r\n                })}\r\n            </tbody>\r\n        </table>\r\n        <div className='pageNumber_buttons'>\r\n            <span>Page{' '}<strong>{pageIndex + 1} of {pageOptions.length}</strong>{' '}</span>\r\n            <div className='buttons'>\r\n                <button className=\"disabled-button\" onClick={() => previousPage()} disabled={!canPreviousPage}>Previous</button>\r\n                <button className=\"disabled-button\" onClick={() => nextPage()} disabled={!canNextPage}>Next</button >\r\n            </div>\r\n        </div >\r\n    </>\r\n};\r\n\r\nexport default Table;"],"names":["Table","data","setData","useState","useEffect","fetchData","storedData","JSON","parse","localStorage","getItem","COLUMNS","Header","accessor","columns","useMemo","getTableProps","getTableBodyProps","headerGroups","page","nextPage","previousPage","canPreviousPage","canNextPage","pageOptions","setPageSize","state","setGlobalFilter","prepareRow","useTable","useGlobalFilter","useSortBy","usePagination","pageIndex","pageSize","globalFilter","_jsxs","_Fragment","children","className","_jsx","value","onChange","e","Number","target","map","type","getHeaderGroupProps","headers","getHeaderProps","getSortByToggleProps","render","isSorted","isSortedDesc","class","row","getRowProps","cells","cell","getCellProps","length","onClick","disabled"],"sourceRoot":""}