{"version":3,"file":"static/js/962.fa572e3b.chunk.js","mappings":"gJAiDe,SAASA,EAAIC,GAAsD,IAArD,SAAEC,EAAQ,KAAEC,EAAI,KAAEC,EAAI,KAAEC,EAAI,SAAEC,EAAQ,SAAEC,GAAUN,EAE3E,MAAMO,GAAWC,EAAAA,EAAAA,UAEjB,OAAOC,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACHC,EAAAA,EAAAA,KAAA,SAAOC,UAAWX,EAAMY,QAASZ,EAAKS,SAAER,KACxCM,EAAAA,EAAAA,MAAA,UAAQM,UAAQ,EAACC,IAAKX,EAAUC,SAAUA,EAAUJ,KAAMA,EAAMe,GAAIf,EAAKS,SAAA,EACrEF,EAAAA,EAAAA,MAAA,UAAQS,MAAM,GAAEP,SAAA,CAAC,YAAUT,KAC1BE,EAAKe,KAAKf,IACPQ,EAAAA,EAAAA,KAAA,UAAgCM,MAAOd,EAAKF,KAAKS,SAC5CP,EAAKF,MADGE,EAAKgB,oBAK1BR,EAAAA,EAAAA,KAAA,KAAGI,IAAKT,EAAUM,UAAU,WAAUF,SAAEV,MAGhD,C","sources":["components/menu/menu.jsx"],"sourcesContent":["import { useRef } from 'react'\r\nimport './style/menu.css'\r\n\r\n\r\n/*export default function Menu({ name, text, data, inputRef, onChange, errorMsg }) {\r\n    const listRef = useRef()\r\n    const errorRef = useRef()\r\n    const chooseList = (e) => {\r\n        console.log(e.target.textContent);\r\n        inputRef.current.value = e.target.textContent;\r\n        onChange(name, e.target.textContent);\r\n    }\r\n    useEffect(() => {\r\n        inputRef.current.addEventListener('click', (e) => {\r\n            if (listRef.current.classList.contains('mask')) {\r\n                listRef.current.classList.toggle('mask')\r\n            }\r\n        })\r\n        document.addEventListener('click', (e) => {\r\n            if (e.target !== inputRef.current && !listRef.current.classList.contains('mask')) {\r\n                listRef.current.classList.toggle('mask')\r\n            }\r\n            if (errorRef.current.textContent === 'Invalid ' + text) {\r\n                listRef.current.classList.add('error-' + name)\r\n                listRef.current.classList.remove('list-' + name)\r\n            } else if (errorRef.current.textContent === '') {\r\n                listRef.current.classList.add('list-' + name)\r\n                listRef.current.classList.remove('error-' + name)\r\n            }\r\n        })\r\n    }, [])\r\n    return <>\r\n        <label className={'label-' + name} htmlFor={name}>{text}</label>\r\n        <input type='text' required ref={inputRef} onChange={onChange} name={name} id={name} />\r\n        {//<li value=\"\">Choose a {id}</li>\r\n        }\r\n        <ul ref={listRef} className={\" mask list-\" + name}  >\r\n            {data.map((data) => (\r\n                <li onClick={chooseList} key={data.abbreviation} value={data.name}>\r\n                    {data.name}\r\n                </li>\r\n            ))}\r\n        </ul>\r\n        <p ref={errorRef} className='errorMsg'>{errorMsg}</p>\r\n    </>\r\n}*/\r\n\r\n//fonction qui g√®re le composant Menu\r\n\r\nexport default function Menu({ errorMsg, name, text, data, inputRef, onChange }) {\r\n\r\n    const errorRef = useRef()\r\n\r\n    return <>\r\n        <label className={name} htmlFor={name}>{text}</label>\r\n        <select required ref={inputRef} onChange={onChange} name={name} id={name}>\r\n            <option value=\"\">Choose a {name}</option>\r\n            {data.map((data) => (\r\n                <option key={data.abbreviation} value={data.name}>\r\n                    {data.name}\r\n                </option>\r\n            ))}\r\n        </select>\r\n        <p ref={errorRef} className='errorMsg'>{errorMsg}</p>\r\n\r\n    </>\r\n}"],"names":["Menu","_ref","errorMsg","name","text","data","inputRef","onChange","errorRef","useRef","_jsxs","_Fragment","children","_jsx","className","htmlFor","required","ref","id","value","map","abbreviation"],"sourceRoot":""}