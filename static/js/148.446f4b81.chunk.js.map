{"version":3,"file":"static/js/148.446f4b81.chunk.js","mappings":"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","sources":["data/data.js","components/form/form.jsx","../node_modules/mohaali-react-modal-component/dist/index.js","../node_modules/mohaali-react-modal-component/dist/modal-component.js","webpack://hrnet/./node_modules/mohaali-react-modal-component/dist/modal-component.css?58e0"],"sourcesContent":["export const statesArray = [\r\n    { abbreviation: 'AL', name: 'Alabama' },\r\n    { abbreviation: 'AK', name: 'Alaska' },\r\n    { abbreviation: 'AZ', name: 'Arizona' },\r\n    { abbreviation: 'AR', name: 'Arkansas' },\r\n    { abbreviation: 'CA', name: 'California' },\r\n    { abbreviation: 'CO', name: 'Colorado' },\r\n    { abbreviation: 'CT', name: 'Connecticut' },\r\n    { abbreviation: 'DE', name: 'Delaware' },\r\n    { abbreviation: 'FL', name: 'Florida' },\r\n    { abbreviation: 'GA', name: 'Georgia' },\r\n    { abbreviation: 'HI', name: 'Hawaii' },\r\n    { abbreviation: 'ID', name: 'Idaho' },\r\n    { abbreviation: 'IL', name: 'Illinois' },\r\n    { abbreviation: 'IN', name: 'Indiana' },\r\n    { abbreviation: 'IA', name: 'Iowa' },\r\n    { abbreviation: 'KS', name: 'Kansas' },\r\n    { abbreviation: 'KY', name: 'Kentucky' },\r\n    { abbreviation: 'LA', name: 'Louisiana' },\r\n    { abbreviation: 'ME', name: 'Maine' },\r\n    { abbreviation: 'MD', name: 'Maryland' },\r\n    { abbreviation: 'MA', name: 'Massachusetts' },\r\n    { abbreviation: 'MI', name: 'Michigan' },\r\n    { abbreviation: 'MN', name: 'Minnesota' },\r\n    { abbreviation: 'MS', name: 'Mississippi' },\r\n    { abbreviation: 'MO', name: 'Missouri' },\r\n    { abbreviation: 'MT', name: 'Montana' },\r\n    { abbreviation: 'NE', name: 'Nebraska' },\r\n    { abbreviation: 'NV', name: 'Nevada' },\r\n    { abbreviation: 'NH', name: 'New Hampshire' },\r\n    { abbreviation: 'NJ', name: 'New Jersey' },\r\n    { abbreviation: 'NM', name: 'New Mexico' },\r\n    { abbreviation: 'NY', name: 'New York' },\r\n    { abbreviation: 'NC', name: 'North Carolina' },\r\n    { abbreviation: 'ND', name: 'North Dakota' },\r\n    { abbreviation: 'OH', name: 'Ohio' },\r\n    { abbreviation: 'OK', name: 'Oklahoma' },\r\n    { abbreviation: 'OR', name: 'Oregon' },\r\n    { abbreviation: 'PA', name: 'Pennsylvania' },\r\n    { abbreviation: 'RI', name: 'Rhode Island' },\r\n    { abbreviation: 'SC', name: 'South Carolina' },\r\n    { abbreviation: 'SD', name: 'South Dakota' },\r\n    { abbreviation: 'TN', name: 'Tennessee' },\r\n    { abbreviation: 'TX', name: 'Texas' },\r\n    { abbreviation: 'UT', name: 'Utah' },\r\n    { abbreviation: 'VT', name: 'Vermont' },\r\n    { abbreviation: 'VA', name: 'Virginia' },\r\n    { abbreviation: 'WA', name: 'Washington' },\r\n    { abbreviation: 'WV', name: 'West Virginia' },\r\n    { abbreviation: 'WI', name: 'Wisconsin' },\r\n    { abbreviation: 'WY', name: 'Wyoming' },\r\n];\r\n\r\nexport const departmentsArray = [\r\n    { abbreviation: 'SA', name: 'Sales' },\r\n    { abbreviation: 'MA', name: 'Marketing' },\r\n    { abbreviation: 'EN', name: 'Engineering' },\r\n    { abbreviation: 'HR', name: 'Human Resources' },\r\n    { abbreviation: 'LE', name: 'Legal' },\r\n];","import './style/form.css'\r\n//import Menu from \"../menu/menu\";\r\nimport { statesArray, departmentsArray } from '../../data/data';\r\nimport { useState, useRef, useEffect } from 'react';\r\n//import { DatePicker } from '../date-picker/date-picker';\r\nimport ModalComponent from 'mohaali-react-modal-component'\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport loadable from '@loadable/component';\r\nconst Menu = loadable(() => import('../menu/menu'));\r\nconst DatePicker = loadable(() => import('../date-picker/date-picker'));\r\n\r\nexport default function Form() {\r\n\r\n    //Code pour faire fonctionner la bibliothèque \r\n    const [modalOpen, setModalOpen] = useState(false);\r\n    const navigate = useNavigate();\r\n\r\n    const closeModal = () => {\r\n        setModalOpen(false)\r\n        setTimeout(() => {\r\n            navigate(\"/employee-list\");\r\n        }, 1000);\r\n    };\r\n\r\n    //Refs\r\n    const inputFirstName = useRef();\r\n    const inputLastName = useRef();\r\n    const inputDateBirth = useRef();\r\n    const inputDateStart = useRef();\r\n    const inputStreet = useRef();\r\n    const inputCity = useRef();\r\n    const inputState = useRef();\r\n    const inputZipCode = useRef();\r\n    const inputDepartment = useRef();\r\n\r\n    //States\r\n    const [employeeArray, setEmployeeArray] = useState([]);\r\n    const [formData, setFormData] = useState({\r\n        firstName: '',\r\n        lastName: '',\r\n        dateBirth: '',\r\n        dateStart: '',\r\n        street: '',\r\n        city: '',\r\n        zipCode: '',\r\n        state: '',\r\n        department: ''\r\n    });\r\n    const [errorMsg, setErrorMsg] = useState({\r\n        firstName: '',\r\n        lastName: '',\r\n        dateBirth: '',\r\n        dateStart: '',\r\n        street: '',\r\n        city: '',\r\n        zipCode: '',\r\n        state: '',\r\n        department: ''\r\n    });\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        const existingData = JSON.parse(localStorage.getItem('employee'));\r\n\r\n        //Si le localStorage existe, alors on ajoute le tableau dans le state employeeArray, \r\n        //sinon, on définit le localStorage avec un tableau vide\r\n        if (existingData) {\r\n            setEmployeeArray(existingData);\r\n        } else {\r\n            localStorage.setItem('employee', JSON.stringify([]));\r\n        }\r\n\r\n    }, [])\r\n\r\n    //fonction qui permet de vérifier les données du formulaire \r\n    const validateForm = (e) => {\r\n        let isFormValid = true\r\n\r\n        const newErrors = { firstName: '', lastName: '', dateBirth: '', dateStart: '', street: '', city: '', zipCode: '', state: '', department: '' };\r\n\r\n        const regexFirstName = /^[a-zA-ZÀ-ÖØ-öø-ÿ\\s']{2,}$/;\r\n        const regexLastName = /^[a-zA-ZÀ-ÖØ-öø-ÿ\\s']{2,}$/;\r\n        const regexCity = /^[a-zA-ZÀ-ÖØ-öø-ÿ\\s'-]{2,}$/;\r\n        const regexStreet = /^[a-zA-Z0-9\\s',.-]{2,}$/;\r\n        const regexZipcode = /^\\d{5}(?:-\\d{4})?$/;\r\n\r\n        //si tableau les champs sont vides, ou regex incorrect, on modifie le message d'erreur correspondant, et on définit isFormValid à false\r\n        if (formData.firstName.trim() === '' || regexFirstName.test(formData.firstName) === false) { newErrors.firstName = \"Invalid Firstname\"; isFormValid = false }\r\n        if (formData.lastName.trim() === '' || regexLastName.test(formData.lastName) === false) { newErrors.lastName = \"Invalid lastName\"; isFormValid = false }\r\n        if (formData.dateBirth.trim() === '') { newErrors.dateBirth = \"Invalid Date of Birth\"; isFormValid = false }\r\n        if (formData.dateStart.trim() === '') { newErrors.dateStart = \"Invalid Date of Start\"; isFormValid = false }\r\n        if (formData.street.trim() === '' || regexStreet.test(formData.street) === false) { newErrors.street = \"Invalid Street\"; isFormValid = false }\r\n        if (formData.city.trim() === '' || regexCity.test(formData.city) === false) { newErrors.city = \"Invalid City\"; isFormValid = false }\r\n        if (formData.zipCode.trim() === '' || regexZipcode.test(formData.zipCode) === false) { newErrors.zipCode = \"Invalid Zip Code\"; isFormValid = false }\r\n        if (formData.department.trim() === '') { newErrors.department = \"Invalid Department\"; isFormValid = false }\r\n        if (formData.state.trim() === '') { newErrors.state = \"Invalid State\"; isFormValid = false }\r\n\r\n\r\n        // Calcul de la différence d'âge\r\n        const ageDifference = Math.abs(new Date(formData.dateStart).getFullYear() - new Date(formData.dateBirth).getFullYear());\r\n        console.log(ageDifference);\r\n\r\n        if (ageDifference < 16) {\r\n            newErrors.dateBirth = \"Invalid Date of Birth\"; isFormValid = false\r\n        }\r\n\r\n        //on set les message d'erreur avec le nouveau tableau. \r\n        setErrorMsg(newErrors)\r\n\r\n        //on retourne isFormValid pour définir le boleen de la fonction\r\n        return isFormValid\r\n    }\r\n\r\n    //fonction pour soumettre formulaire\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        //si la fonction validateForm est true, alors on créer un objet qui récupère toute les données du formulaire\r\n        if (validateForm()) {\r\n            setModalOpen(true);\r\n            const formDataObject = {\r\n                firstName: formData.firstName,\r\n                lastName: formData.lastName,\r\n                dateBirth: formData.dateBirth,\r\n                dateStart: formData.dateStart,\r\n                street: formData.street,\r\n                city: formData.city,\r\n                zipCode: formData.zipCode,\r\n                state: formData.state,\r\n                department: formData.department\r\n            };\r\n\r\n            //On met à jour le localStorage avec les nouvelles données récupérées\r\n            setEmployeeArray((prevArray) => {\r\n                const updatedArray = [...prevArray, formDataObject];\r\n                localStorage.setItem('employee', JSON.stringify(updatedArray));\r\n                return updatedArray;\r\n            });\r\n\r\n            //une fois le formulaire soumis, on reinitialise les valeurs du formulaire\r\n            setFormData({\r\n                firstName: '',\r\n                lastName: '',\r\n                dateBirth: '',\r\n                dateStart: '',\r\n                street: '',\r\n                city: '',\r\n                zipCode: '',\r\n                state: '',\r\n                department: ''\r\n            });\r\n\r\n            console.log('Formulaire soumis avec succès !');\r\n        } else {\r\n            console.log('no');\r\n        }\r\n    };\r\n\r\n    //fonction permettant de récupérer les nouvelle valeurs insérer lors d'un changement dans un input\r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setFormData((prevData) => ({ ...prevData, [name]: value }));\r\n        console.log(formData.state);\r\n    };\r\n\r\n    /*const handleChangeMenu = (name, value) => {\r\n        setFormData((prevData) => ({ ...prevData, [name]: value }));\r\n        console.log(formData.state);\r\n    }*/\r\n\r\n    return <>\r\n        <form onSubmit={handleSubmit} id=\"create-employee\">\r\n            <h2>Create Employee</h2>\r\n            <fieldset className='personal-infos'>\r\n                <legend>Personal informations </legend>\r\n\r\n                <label htmlFor=\"first-name\">First Name</label>\r\n                <input\r\n                    type=\"text\"\r\n                    id=\"first-name\"\r\n                    name=\"firstName\"\r\n                    ref={inputFirstName}\r\n                    value={formData.firstName}\r\n                    onChange={handleChange}\r\n                />\r\n                <p className='errorMsg'>{errorMsg.firstName}</p>\r\n\r\n\r\n                <label htmlFor=\"last-name\">Last Name</label>\r\n                <input\r\n                    ref={inputLastName}\r\n                    type=\"text\"\r\n                    id=\"last-name\"\r\n                    name=\"lastName\"\r\n                    value={formData.lastName}\r\n                    onChange={handleChange} />\r\n                <p className='errorMsg'>{errorMsg.lastName}</p>\r\n\r\n                <DatePicker\r\n                    inputRef={inputDateBirth}\r\n                    labelText='Date of Birth'\r\n                    id='date-of-birth'\r\n                    name='dateBirth'\r\n                    value={formData.birthDate}\r\n                    onChange={handleChange} />\r\n                <p className='errorMsg'>{errorMsg.dateBirth}</p>\r\n\r\n                <DatePicker\r\n                    inputRef={inputDateStart}\r\n                    labelText='Start Date'\r\n                    id='start-date'\r\n                    name='dateStart'\r\n                    value={formData.startDate}\r\n                    onChange={handleChange} />\r\n                <p className='errorMsg'>{errorMsg.dateStart}</p>\r\n            </fieldset>\r\n\r\n\r\n            <fieldset className=\"address\">\r\n                <legend>Address</legend>\r\n\r\n                <label htmlFor=\"street\">Street</label>\r\n                <input\r\n                    ref={inputStreet}\r\n                    id=\"street\"\r\n                    name='street'\r\n                    type=\"text\"\r\n                    value={formData.street}\r\n                    onChange={handleChange} />\r\n                <p className='errorMsg'>{errorMsg.street}</p>\r\n\r\n                <label htmlFor=\"city\">City</label>\r\n                <input\r\n                    ref={inputCity}\r\n                    id=\"city\"\r\n                    name='city'\r\n                    type=\"text\"\r\n                    value={formData.city}\r\n                    onChange={handleChange} />\r\n                <p className='errorMsg'>{errorMsg.city}</p>\r\n\r\n                <Menu\r\n                    inputRef={inputState}\r\n                    data={statesArray}\r\n                    text='State'\r\n                    name='state'\r\n                    value={formData.state}\r\n                    onChange={handleChange}//{handleChangeMenu}\r\n                    errorMsg={errorMsg.state}\r\n                />\r\n\r\n                <label htmlFor=\"zip-code\">Zip Code</label>\r\n                <input\r\n                    ref={inputZipCode}\r\n                    id=\"zip-code\"\r\n                    name='zipCode'\r\n                    type=\"number\"\r\n                    value={formData.zipCode}\r\n                    onChange={handleChange}\r\n                />\r\n                <p className='errorMsg'>{errorMsg.zipCode}</p>\r\n\r\n            </fieldset>\r\n            <Menu\r\n                inputRef={inputDepartment}\r\n                data={departmentsArray}\r\n                text='Department'\r\n                name='department'\r\n                value={formData.department}\r\n                onChange={handleChange}//{handleChangeMenu}\r\n                errorMsg={errorMsg.department} />\r\n\r\n            <button type='submit' onClick={validateForm} >Add employee</button>\r\n        </form >\r\n\r\n        <ModalComponent\r\n            isOpen={modalOpen}\r\n            onClose={closeModal}\r\n            modalContent={'Employee created!'} />\r\n    </>\r\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _modalComponent = _interopRequireDefault(require(\"./modal-component.js\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nvar _default = exports.default = _modalComponent.default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _react = _interopRequireDefault(require(\"react\"));\nrequire(\"./modal-component.css\");\nvar _modalClose = _interopRequireDefault(require(\"./images/modal-close.png\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nconst ModalComponent = _ref => {\n  let {\n    isOpen,\n    modalContent,\n    overlayStyle,\n    modalStyle,\n    contentStyle,\n    imgStyle,\n    onClose\n  } = _ref;\n  if (!isOpen) {\n    return null;\n  }\n  return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement(\"div\", {\n    style: overlayStyle,\n    className: \"modal-overlay\"\n  }, /*#__PURE__*/_react.default.createElement(\"div\", {\n    style: modalStyle,\n    className: \"modal\"\n  }, /*#__PURE__*/_react.default.createElement(\"p\", {\n    style: contentStyle\n  }, modalContent), /*#__PURE__*/_react.default.createElement(\"img\", {\n    style: imgStyle,\n    src: _modalClose.default,\n    alt: \"close button of modal\",\n    className: \"close-button\",\n    onClick: onClose\n  }))));\n};\nvar _default = exports.default = ModalComponent;","// extracted by mini-css-extract-plugin\nexport default {};"],"names":["statesArray","abbreviation","name","departmentsArray","Menu","loadable","DatePicker","Form","modalOpen","setModalOpen","useState","navigate","useNavigate","inputFirstName","useRef","inputLastName","inputDateBirth","inputDateStart","inputStreet","inputCity","inputState","inputZipCode","inputDepartment","employeeArray","setEmployeeArray","formData","setFormData","firstName","lastName","dateBirth","dateStart","street","city","zipCode","state","department","errorMsg","setErrorMsg","useEffect","existingData","JSON","parse","localStorage","getItem","setItem","stringify","validateForm","e","isFormValid","newErrors","trim","test","ageDifference","Math","abs","Date","getFullYear","console","log","handleChange","value","target","prevData","_jsxs","_Fragment","children","onSubmit","preventDefault","formDataObject","prevArray","updatedArray","id","_jsx","className","htmlFor","type","ref","onChange","inputRef","labelText","birthDate","startDate","data","text","onClick","ModalComponent","isOpen","onClose","closeModal","setTimeout","modalContent","exports","obj","_modalComponent","require","__esModule","default","Object","defineProperty","_react","_interopRequireDefault","_modalClose","_ref","overlayStyle","modalStyle","contentStyle","imgStyle","createElement","Fragment","style","src","alt"],"sourceRoot":""}